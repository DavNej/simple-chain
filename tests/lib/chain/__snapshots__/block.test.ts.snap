// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Block Class > should correctly calculate merkel tree 1`] = `
MerkleTree {
  "complete": false,
  "concatenator": [Function],
  "duplicateOdd": false,
  "fillDefaultHash": null,
  "hashFn": [Function],
  "hashLeaves": false,
  "isBitcoinTree": false,
  "layers": [
    [
      {
        "data": [
          223,
          143,
          24,
          67,
          181,
          30,
          10,
          46,
          216,
          123,
          1,
          59,
          39,
          47,
          73,
          253,
          25,
          81,
          250,
          25,
          126,
          248,
          115,
          39,
          214,
          227,
          80,
          118,
          130,
          144,
          174,
          205,
        ],
        "type": "Buffer",
      },
      {
        "data": [
          166,
          202,
          124,
          124,
          203,
          7,
          32,
          129,
          204,
          143,
          153,
          224,
          70,
          115,
          6,
          113,
          36,
          140,
          44,
          0,
          84,
          45,
          141,
          222,
          177,
          83,
          88,
          78,
          49,
          158,
          64,
          68,
        ],
        "type": "Buffer",
      },
    ],
    [
      {
        "data": [
          26,
          23,
          224,
          204,
          19,
          86,
          128,
          161,
          188,
          87,
          144,
          227,
          210,
          53,
          83,
          15,
          254,
          118,
          8,
          211,
          227,
          137,
          74,
          158,
          73,
          146,
          62,
          231,
          150,
          226,
          158,
          29,
        ],
        "type": "Buffer",
      },
    ],
  ],
  "leaves": [
    {
      "data": [
        223,
        143,
        24,
        67,
        181,
        30,
        10,
        46,
        216,
        123,
        1,
        59,
        39,
        47,
        73,
        253,
        25,
        81,
        250,
        25,
        126,
        248,
        115,
        39,
        214,
        227,
        80,
        118,
        130,
        144,
        174,
        205,
      ],
      "type": "Buffer",
    },
    {
      "data": [
        166,
        202,
        124,
        124,
        203,
        7,
        32,
        129,
        204,
        143,
        153,
        224,
        70,
        115,
        6,
        113,
        36,
        140,
        44,
        0,
        84,
        45,
        141,
        222,
        177,
        83,
        88,
        78,
        49,
        158,
        64,
        68,
      ],
      "type": "Buffer",
    },
  ],
  "sort": false,
  "sortLeaves": false,
  "sortPairs": false,
}
`;

exports[`Block Class > should fail to match merkle tree of a corrupted block 1`] = `
MerkleTree {
  "complete": false,
  "concatenator": [Function],
  "duplicateOdd": false,
  "fillDefaultHash": null,
  "hashFn": [Function],
  "hashLeaves": false,
  "isBitcoinTree": false,
  "layers": [
    [
      {
        "data": [
          17,
          137,
          180,
          126,
          196,
          191,
          186,
          27,
          10,
          143,
          234,
          204,
          134,
          127,
          183,
          60,
          13,
          127,
          132,
          213,
          138,
          225,
          174,
          239,
          164,
          65,
          34,
          176,
          4,
          144,
          123,
          68,
        ],
        "type": "Buffer",
      },
      {
        "data": [
          166,
          202,
          124,
          124,
          203,
          7,
          32,
          129,
          204,
          143,
          153,
          224,
          70,
          115,
          6,
          113,
          36,
          140,
          44,
          0,
          84,
          45,
          141,
          222,
          177,
          83,
          88,
          78,
          49,
          158,
          64,
          68,
        ],
        "type": "Buffer",
      },
    ],
    [
      {
        "data": [
          221,
          183,
          223,
          69,
          228,
          166,
          34,
          45,
          124,
          59,
          111,
          221,
          82,
          44,
          82,
          48,
          15,
          88,
          215,
          93,
          185,
          184,
          36,
          147,
          96,
          205,
          102,
          242,
          196,
          87,
          255,
          160,
        ],
        "type": "Buffer",
      },
    ],
  ],
  "leaves": [
    {
      "data": [
        17,
        137,
        180,
        126,
        196,
        191,
        186,
        27,
        10,
        143,
        234,
        204,
        134,
        127,
        183,
        60,
        13,
        127,
        132,
        213,
        138,
        225,
        174,
        239,
        164,
        65,
        34,
        176,
        4,
        144,
        123,
        68,
      ],
      "type": "Buffer",
    },
    {
      "data": [
        166,
        202,
        124,
        124,
        203,
        7,
        32,
        129,
        204,
        143,
        153,
        224,
        70,
        115,
        6,
        113,
        36,
        140,
        44,
        0,
        84,
        45,
        141,
        222,
        177,
        83,
        88,
        78,
        49,
        158,
        64,
        68,
      ],
      "type": "Buffer",
    },
  ],
  "sort": false,
  "sortLeaves": false,
  "sortPairs": false,
}
`;
